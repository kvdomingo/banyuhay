services:
  api:
    build:
      context: ./api
      dockerfile: ../Dockerfile
    image: kvdomingo/banyuhay-api
    restart: unless-stopped
    init: true
    env_file: ./api/.env
    command:
      - |
        poetry install --no-root
        poetry run alembic upgrade head
        exec poetry run uvicorn api:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./api:/app
      - venv-data:/app/.venv
    ports:
      - '8000:8000'
    healthcheck:
      test: [ 'CMD', 'curl', '-fL', 'http://localhost:8000/api/health' ]
    depends_on:
      db:
        condition: service_healthy

  ui:
    image: oven/bun:1.1-alpine
    restart: unless-stopped
    init: true
    working_dir: /app
    environment:
      NODE_ENV: development
    env_file: ./ui/.env
    entrypoint:
      - /bin/sh
      - -c
      - bun install && exec bun run dev
    volumes:
      - ./ui:/app
    ports:
      - '3000:3000'

  db:
    image: bitnami/postgresql:16.4.0-debian-12-r8
    restart: unless-stopped
    env_file: ./api/.env
    volumes:
      - db-data:/bitnami/postgresql
    ports:
      - '5432:5432'
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-U', '$${POSTGRESQL_USERNAME}', '-d', '$${POSTGRESQL_DATABASE}' ]
      start_period: 10s
      retries: 3
      interval: 20s
      timeout: 2s

  dagster:
    build:
      context: ./pipelines
      dockerfile: ../Dockerfile
    image: kvdomingo/banyuhay-pipelines
    restart: unless-stopped
    init: true
    env_file: ./pipelines/.env
    environment:
      DAGSTER_HOME: /opt/dagster
    command:
      - |
        poetry install --no-root
        mkdir -p $${DAGSTER_HOME}
        cp /app/dagster.yaml $${DAGSTER_HOME}/dagster.yaml
        exec poetry run dagster dev -h 0.0.0.0 -p 3030
    volumes:
      - ./pipelines:/app
      - dagster-venv-data:/app/.venv
    ports:
      - '3030:3030'
    depends_on:
      dagster-db:
        condition: service_healthy

  dagster-db:
    image: bitnami/postgresql:16.4.0-debian-12-r8
    restart: unless-stopped
    env_file: ./pipelines/.env
    volumes:
      - dagster-db-data:/bitnami/postgresql
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-U', '$${POSTGRESQL_USERNAME}', '-d', '$${POSTGRESQL_DATABASE}' ]
      start_period: 10s
      retries: 3
      interval: 20s
      timeout: 2s

  pgadmin:
    image: dpage/pgadmin4:8.12
    environment:
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
      PGADMIN_LISTEN_PORT: 5000
    env_file: ./api/.env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5000:5000"

volumes:
  venv-data:
  dagster-venv-data:
  db-data:
  dagster-db-data:
  pgadmin-data:
